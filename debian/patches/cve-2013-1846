Author: Ben Reser <breser@tigris.org>
Subject: Improve the logic in mod_dav_svn's implementation of LOCK

Subversion's mod_dav_svn Apache HTTPD server module will crash in some
circumstances when a LOCK request is made against activity URL or
non-existent URL. The vulnerability can be triggered by doing a LOCK
request against an activity URL.
The vulnerability can also be triggered by doing a LOCK request against
a URL for a path that does not exist in the repository or an invalid
activity URL where authentication is not required for the LOCK
method.

Origin: upstream, commit:r1455352
Bug-CVE: http://subversion.apache.org/security/CVE-2013-1846-advisory.txt
Bug-CVE: http://subversion.apache.org/security/CVE-2013-1847-advisory.txt
Bug-Debian: http://bugs.debian.org/704940
Last-Update: 2013-04-16
Applied-Upstream: commit:r1455352

--- a/subversion/mod_dav_svn/lock.c
+++ b/subversion/mod_dav_svn/lock.c
@@ -631,6 +631,19 @@
   svn_lock_t *slock;
   svn_error_t *serr;
   dav_error *derr;
+  dav_svn_repos *repos = resource->info->repos;
+      
+  /* We don't allow anonymous locks */
+  if (! repos->username)
+    return dav_new_error(resource->pool, HTTP_UNAUTHORIZED,
+                         DAV_ERR_LOCK_SAVE_LOCK,
+                         "Anonymous lock creation is not allowed.");
+
+  /* Not a path in the repository so can't lock it. */
+  if (! resource->info->repos_path)
+    return dav_new_error(resource->pool, HTTP_BAD_REQUEST,
+                         DAV_ERR_LOCK_SAVE_LOCK,
+                         "Attempted to lock path not in repository.");
 
   /* If the resource's fs path is unreadable, we don't allow a lock to
      be created on it. */
@@ -653,7 +666,6 @@
       svn_fs_txn_t *txn;
       svn_fs_root_t *txn_root;
       const char *conflict_msg;
-      dav_svn_repos *repos = resource->info->repos;
       apr_hash_t *revprop_table = apr_hash_make(resource->pool);
       apr_hash_set(revprop_table, SVN_PROP_REVISION_AUTHOR,
                    APR_HASH_KEY_STRING, svn_string_create(repos->username,
@@ -717,14 +729,14 @@
 
   /* Convert the dav_lock into an svn_lock_t. */
   derr = dav_lock_to_svn_lock(&slock, lock, resource->info->repos_path,
-                              info, resource->info->repos->is_svn_client,
+                              info, repos->is_svn_client,
                               resource->pool);
   if (derr)
     return derr;
 
   /* Now use the svn_lock_t to actually perform the lock. */
   serr = svn_repos_fs_lock(&slock,
-                           resource->info->repos->repos,
+                           repos->repos,
                            slock->path,
                            slock->token,
                            slock->comment,
