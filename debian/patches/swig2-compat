Support swig 2.0.  From upstream r1049503, modified.

Index: subversion-1.6.17dfsg/build/ac-macros/swig.m4
===================================================================
--- subversion-1.6.17dfsg.orig/build/ac-macros/swig.m4	2011-09-08 21:16:51.000000000 -0500
+++ subversion-1.6.17dfsg/build/ac-macros/swig.m4	2011-09-08 21:17:01.000000000 -0500
@@ -75,13 +75,13 @@
     #   packages/rpm/rhel-4/subversion.spec
     if test -n "$SWIG_VERSION" &&
        test "$SWIG_VERSION" -ge "103024" &&
-       test "$SWIG_VERSION" -le "103036"; then
+       test "$SWIG_VERSION" -le "201000"; then
       SWIG_SUITABLE=yes
     else
       SWIG_SUITABLE=no
       AC_MSG_WARN([Detected SWIG version $SWIG_VERSION_RAW])
       AC_MSG_WARN([Subversion requires 1.3.24 or later, and is known to work])
-      AC_MSG_WARN([with versions up to 1.3.36])
+      AC_MSG_WARN([with versions up to 2.0.x])
     fi
   fi
  
Index: subversion-1.6.17dfsg/build/generator/swig/__init__.py
===================================================================
--- subversion-1.6.17dfsg.orig/build/generator/swig/__init__.py	2011-09-08 21:16:51.000000000 -0500
+++ subversion-1.6.17dfsg/build/generator/swig/__init__.py	2011-09-08 21:17:01.000000000 -0500
@@ -50,9 +50,8 @@
       swig_version = _exec.output([self.swig_path, "-version"])
       m = re.search("Version (\d+).(\d+).(\d+)", swig_version)
       if m:
-        return int(
-          "%s0%s0%s" % (m.group(1), m.group(2), m.group(3)))
+        return (m.group(1), m.group(2), m.group(3))
     except AssertionError:
       pass
-    return 0
+    return (0, 0, 0)
 
Index: subversion-1.6.17dfsg/build/generator/swig/checkout_swig_header.py
===================================================================
--- subversion-1.6.17dfsg.orig/build/generator/swig/checkout_swig_header.py	2011-09-08 21:16:51.000000000 -0500
+++ subversion-1.6.17dfsg/build/generator/swig/checkout_swig_header.py	2011-09-08 21:17:01.000000000 -0500
@@ -39,15 +39,15 @@
       os.remove(out)
     if self._skip_checkout(path):
       open(out, "w")
-    elif self.version() == 103024:
+    elif self.version() == (1, 3, 24):
       shutil.copy(build_path_join(self.swig_libdir, path), out)
     else:
       run("%s -o %s -co %s" % (self.swig_path, out, path))
 
   def _skip_checkout(self, path):
     """Should we skip this checkout?"""
-    return (path == "ruby/rubytracking.swg" and self.version() < 103026 or
-            path == "common.swg" and self.version() > 103024)
+    return (path == "ruby/rubytracking.swg" and self.version() < (1, 3, 26) or
+            path == "common.swg" and self.version() > (1, 3, 24))
 
   def _output_file(self, path):
     """Get output filename"""
Index: subversion-1.6.17dfsg/build/generator/swig/external_runtime.py
===================================================================
--- subversion-1.6.17dfsg.orig/build/generator/swig/external_runtime.py	2011-09-08 21:16:51.000000000 -0500
+++ subversion-1.6.17dfsg/build/generator/swig/external_runtime.py	2011-09-08 21:17:01.000000000 -0500
@@ -45,7 +45,7 @@
 
     # Build runtime files
     out = self._output_file(lang)
-    if self.version() == 103024:
+    if self.version() == (1, 3, 24):
       out_file = open(out, "w")
       out_file.write(open("%s/swigrun.swg" % self.proxy_dir).read())
       out_file.write(open("%s/common.swg" % self.proxy_dir).read())
@@ -59,12 +59,12 @@
 
     # SWIG 1.3.24-27 should include rubyhead.swg in their
     # external runtime, but they don't.
-    if lang == "ruby" and self.version() < 103028:
+    if lang == "ruby" and self.version() < (1, 3, 28):
       runtime = open(out).read()
       out_file = open(out, "w")
       head = open("%s/rubyhead.swg" % self.proxy_dir).read();
       out_file.write(head)
-      if self.version() >= 103026:
+      if self.version() >= (1, 3, 26):
         # SWIG 1.3.26-27 should include rubytracking.swg in their
         # external runtime, but they don't.
         tracking = open("%s/rubytracking.swg" % self.proxy_dir).read();
@@ -74,7 +74,7 @@
 
     # SWIG 1.3.25 and earlier use the wrong number of arguments in calls to
     # SWIG_GetModule. We fix this below.
-    if self.version() <= 103025:
+    if self.version() <= (1, 3, 25):
       for line in fileinput.input(out, inplace=1):
         sys.stdout.write(
           re.sub(r"SWIG_GetModule\(\)", "SWIG_GetModule(NULL)", line)
Index: subversion-1.6.17dfsg/subversion/bindings/swig/INSTALL
===================================================================
--- subversion-1.6.17dfsg.orig/subversion/bindings/swig/INSTALL	2011-09-08 21:16:51.000000000 -0500
+++ subversion-1.6.17dfsg/subversion/bindings/swig/INSTALL	2011-09-08 21:17:01.000000000 -0500
@@ -65,7 +65,7 @@
 
 
 Step 1:  Install a suitable version of SWIG (which is
-         currently swig version 1.3.24 - 1.3.31).
+         currently swig version 1.3.24 - 2.0.x).
 
     * Perhaps your distribution packages a suitable version - if it does
       install it, and skip to the last bullet point in this section.
@@ -260,7 +260,7 @@
        the --with-swig parameter to the installed location for SWIG.
        Example:
 
-        > gen-make.py -t vcproj --with-swig="C:\Program Files\SWIG-1.3.31"
+        > gen-make.py -t vcproj --with-swig="C:\Program Files\SWIG-2.0.1"
 
    4.  If you haven't already built Subversion, you should do so now.
        Instructions are in the main INSTALL file.
